/*******************************************************************************
 *
 * No License
 * 
 * This work is under exclusive copyright (c) Baxter AI (baxterai.com). 
 * Nobody else can use, copy, distribute, or modify this work without being 
 * at risk of take-downs, shake-downs, or litigation. 
 * 
 * By publishing this source code in a public repository on GitHub, Terms of 
 * Service have been accepted by which Baxter AI have allowed others to view 
 * and fork their repository.
 * 
 * If you find software that doesn't have a license, that generally means you 
 * have no permission from the creators of the software to use, modify, or 
 * share the software. Although a code host such as GitHub may allow you to 
 * view and fork the code, this does not imply that you are permitted to use, 
 * modify, or share the software for any purpose.
 *
 * This notice has been derived from https://choosealicense.com/no-permission 
 * (https://web.archive.org/web/20180312144938/https://choosealicense.com/no-permission)
 *
 *******************************************************************************/

/*******************************************************************************
 *
 * File Name: NLClibrary.hpp
 * Author: Richard Bruce Baxter - Copyright (c) 2005-2018 Baxter AI (baxterai.com)
 * Project: Natural Language Compiler (Programming Interface)
 * Project Version: 2f8a 18-April-2018
 * Requirements: requires C++ code to be generated by NLC
 *
 *******************************************************************************/

#ifndef HEADER_NLC_LIBRARY
#define HEADER_NLC_LIBRARY

#include "NLClibraryBase.hpp"
#ifdef NLC_LIBRARY_STANDARD
#include "NLClibraryStandard.hpp"
#endif
#ifdef NLC_LIBRARY_USER
#include "NLClibraryUser.hpp"
#endif
#include "NLCgenerated.hpp"
#include "XMLparserClass.hpp"

#define NLC_RULES_XML_FILE_NAME "NLCrules.xml"	//must sync with XMLrulesClass.cpp

#ifdef NLC_ENUM_LISTS
#define RULES_XML_TAG_rules2 ((string)"rules")	//copy of RULES_XML_TAG_rules from XMLrulesClass.hpp (not available to NLClibrary)
#define RULES_XML_TAG_enum ((string)"enum")
#define RULES_XML_TAG_entity ((string)"entity")
#define RULES_XML_TAG_type ((string)"type")
#define RULES_XML_TAG_instance ((string)"instance")
#define RULES_XML_ATTRIBUTE_name ((string)"name")
#define NLC_ENUM_LIST_ENTITY_NAME_PROPERTY "property"
#define NLC_ENUM_LIST_ENTITY_NAME_CONDITION "condition"
#define NLC_ENUM_LIST_ENTITY_NAME_ACTION "action"
#endif

void initialiseNLClibrary();
#ifdef NLC_ENUM_LISTS
bool parseNLCrulesXMLfile(XMLparserTag* NLCfirstTagInXMLfile);
void initiateEnumTypeTables(XMLparserTag* NLCfirstTagInXMLfile);
#endif

#endif
