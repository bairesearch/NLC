 /*******************************************************************************
 *
 * License: GNU Affero General Public License version 3 (AGPLv3)
 *
 *******************************************************************************/

/*******************************************************************************
 *
 * File Name: NLClibrary.hpp
 * Author: Richard Bruce Baxter - Copyright (c) 2005-2022 Baxter AI (baxterai.com)
 * Project: Natural Language Compiler (Programming Interface)
 * Project Version: 2p1a 05-June-2022
 * Requirements: requires C++ code to be generated by NLC
 *
 *******************************************************************************/

#ifndef HEADER_NLC_LIBRARY
#define HEADER_NLC_LIBRARY

#include "NLClibraryBase.hpp"
#ifdef NLC_LIBRARY_STANDARD
#include "NLClibraryStandard.hpp"
#endif
#ifdef NLC_LIBRARY_USER
#include "NLClibraryUser.hpp"
#endif
#include "NLCgenerated.hpp"
#include "XMLparserClass.hpp"

#define NLC_RULES_XML_FILE_NAME "NLCrules.xml"	//must sync with XMLrulesClass.cpp

#ifdef NLC_ENUM_LISTS
#define RULES_XML_TAG_rules2 ((string)"rules")	//copy of RULES_XML_TAG_rules from XMLrulesClass.hpp (not available to NLClibrary)
#define RULES_XML_TAG_enum ((string)"enum")
#define RULES_XML_TAG_entity ((string)"entity")
#define RULES_XML_TAG_type ((string)"type")
#define RULES_XML_TAG_instance ((string)"instance")
#define RULES_XML_ATTRIBUTE_name ((string)"name")
#define NLC_ENUM_LIST_ENTITY_NAME_PROPERTY "property"
#define NLC_ENUM_LIST_ENTITY_NAME_CONDITION "condition"
#define NLC_ENUM_LIST_ENTITY_NAME_ACTION "action"
#endif

void initialiseNLClibrary();
#ifdef NLC_ENUM_LISTS
bool parseNLCrulesXMLfile(XMLparserTag* NLCfirstTagInXMLfile);
void initiateEnumTypeTables(XMLparserTag* NLCfirstTagInXMLfile);
#endif

#endif
